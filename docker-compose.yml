version: '3.6'

services:

  db:
    container_name: db
    image: postgres:alpine
    ports:
      - ${DB_PORT}:5432
    restart: always
    environment:
      POSTGRES_USER: "fp"
      POSTGRES_PASSWORD: "fp"
      POSTGRES_DB: "fp"
      PGDATA: /data/postgres
    volumes:
       - ./backend/data/postgres:/data/postgres

  backend:
    container_name: backend
    build:
      context: backend
      dockerfile: Dockerfile
    volumes:
      - './backend/src:/app/src'
      - './backend/test:/app/test'
      - './backend/resources:/app/resources'
    ports:
      - ${BACKEND_PORT}:9000
    depends_on:
      - db
    environment:
      - NODE_ENV=development

  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    volumes:
      - './frontend/src:/app/src'
      - './frontend/public:/app/public'
    ports:
      - ${FRONTEND_PORT}:3000
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API=${BACKEND_HOST}:${BACKEND_PORT}